<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmeringsuppgifter on TDDD38 tentaplugg #5</title>
    <link>https://lunk-liu.github.io/tentaplugg/tags/programmeringsuppgifter/</link>
    <description>Recent content in Programmeringsuppgifter on TDDD38 tentaplugg #5</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lunk-liu.github.io/tentaplugg/tags/programmeringsuppgifter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fråga 6</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160602/upg6/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160602/upg6/</guid>
      <description>Copy the file assignment6.cc from given_files and make additions to your copy. Submit your solution as Assignment #6. There is a built-in problem with some of the integral types, int in particular, in that we get undefined beavior when going outside the range of the type. Your task in this assignment is to create a type Modular that is templated on the internal storage type and the value range (given as two template non-type parameters).</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 7</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160602/upg7/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160602/upg7/</guid>
      <description>Copy the file assignment7.cc from given_files and make additions to your copy. Submit your solution as Assignment #7.
In this exercise, it’s extra important for you to use the standard library in a good way. To get full marks, use the correct algorithm for the given task – for_each is not a valid solution for all tasks and you won’t need any hand-rolled loops.
The given file has a simple function to test if a value is a prime number and a simple type alias called num_type.</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 7</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160602/upg8/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160602/upg8/</guid>
      <description>Copy assignment8.cc from given_files to your working directory. Add your own code according to instructions below and submit as Assignment #8.
The following function for sorting int values in range [begin, end) is given:
void sort(int* begin, int* end) { for ( ; begin +1 != end; ++begin) { int* min = begin; for (int* pos = begin + 1; pos != end; ++pos) if (*pos &amp;lt; *min) min = pos; std::iter_swap(begin, min); } }  It could be used as follows for sorting the elements of an array:</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 6</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160331/assignment6/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160331/assignment6/</guid>
      <description>Submit your solution as Assignment #6 The game Yahtzee is based on throwing five dice and trying to get specific combinations of these dice. In this assignment, you are going to implement a part of the scoring mechanism.
There are a lot of possible combinations that gives points in Yahtzee, but in this exercise we are going to support checking for a number of ones, number of twos and one pair (two dice with the same result) in a given set of dice.</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 7</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160331/assignment7/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160331/assignment7/</guid>
      <description>Copy the file given_files/assignment7.cc to your working directory and make changes to your copy. Submit your answer as Assignment #7.
There is a function that works a bit like the standard algorithm std::find (but much simpler).
int * Find(int * start, int * end, int val) { for ( auto it = start; it != end; ++it ) { if ( *it == val ) { return it; } } } return end; // wasn&#39;t found  Your task is to do the following modifications to the given function so that the commented lines in the given code compile and give output according to the comments.</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 8</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160331/assignment8/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160331/assignment8/</guid>
      <description>Write your code in a file named assignment8.cc and submit your answer as Assignment #8.
In this assignment, you’re supposed to show good knowledge of the standard library. Any usage of standard iteration statements will give point deductions. In each step of your solution, make sure to use the algorithm most suited to solve the task – for_each is not a valid solution for all problems.
Here is a model competitive programming exercise for you to solve according to the algorithm presented after the problem text.</description>
    </item>
    
    <item>
      <title>Programmeringsuppgift 9</title>
      <link>https://lunk-liu.github.io/tentaplugg/post/160331/assignment9/</link>
      <pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lunk-liu.github.io/tentaplugg/post/160331/assignment9/</guid>
      <description>Copy the file given_files/assignment9.cc to your working directory and make changes to that file. Submit your answer as Assignment #9.
This task is divided into two parts, the first giving three of the total five points and the second is worth the two remaining points. You are not supposed to give separate solutions for the two parts, but may stop after implementing the first part.
Your task in this assignment is to create a stream output manipulator to format a container for printing to some ostream.</description>
    </item>
    
  </channel>
</rss>